# Chunk 1: Pseudo-Facebook User Data
getwd()
setwd('C:/Users/akhou/Documents/Udacity/Project 4 Explore and Summarize Data/Explore One Variable')
pf  <- read.csv('pseudo_facebook.tsv', sep='\t')
names(pf)
# Chunk 2: Histogram of Users\' Birthdays
install.packages('ggplot2')
library(ggplot2)
qplot(x=dob_day,data=pf)
install.packages('ggthemes',dependencies = TRUE)
library(ggthemes)
theme_set(theme_minimal(24))
ggplot(aes(x=dob_day), data=pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks =  1:31)
# Chunk 3: Faceting
ggplot(aes(x=dob_day), data=pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks =  1:31) +
facet_wrap(~dob_month)
# Chunk 4: Friend Count
qplot(x=friend_count, data = pf)
# Chunk 5: Limiting the Axes
qplot(x=friend_count, data = pf,xlim=c(0,1000))
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
# Chunk 6: Faceting Friend Count
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x=friend_count,data = pf, binwidth = 25) +
scale_x_continuous(limits=c(0,1000),breaks = seq(0,100,50)) +
facet_wrap(~gender)
# Chunk 7: Omitting NA Values
qplot(x=friend_count,data = subset(pf,!is.na(gender)), binwidth = 25) +
scale_x_continuous(limits=c(0,1000),breaks = seq(0,100,50)) +
facet_wrap(~gender)
qplot(x=friend_count,data = na.omit(pf), binwidth = 25) + scale_x_continuous(limits=c(0,1000),breaks = seq(0,100,50)) +
facet_wrap(~gender)
# Chunk 8: Statistics \'by\' Gender
table(pf$gender)
by(pf$friend_count,pf$gender,summary)
# Chunk 9: Tenure
qplot(x = tenure, data = pf,binwidth = 30, color = I('black'), fill = I('#099DD9'))
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
# Chunk 10: Tenure Histogram by Year
qplot(x = tenure/365, data = pf,binwidth = 0.25, color = I('black'), fill = I('#099DD9'))
# Chunk 11: Labeling Plots
qplot(x = tenure/365, data = pf,binwidth = 0.25,
xlab ='tenure',
ylab ='count',
color = I('black'),
fill = I('#099DD9'))
# Chunk 12: User Ages
ggplot(aes(x = age), data = pf)+
geom_histogram(binwidth = 1,fill= '#5760AB')
# Chunk 13: Add a Scaling Layer
install.packages("gridExtra")
library(gridExtra)
p1<-ggplot(aes(x = friend_count), data = pf )+geom_histogram()+
scale_x_continuous()
p2<-p1+
scale_x_log10()
p3<-p1+
scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=1)
# Chunk 14: Frequency Polygons
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +   geom_freqpoly(aes(color = gender)) +   scale_x_log10()
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender),geom='boxplot'  )
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot'  )
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot')
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot', limit=1000)
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot')+
scale_x_continuous(limits=c(0,1000))
scale_x_discrete(limits=c(0,1000))
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot')+
scale_x_discrete(limits=c(0,1000))
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot')+
scale_y_continuous(limits = c(0,1000))
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot')+
coord_cartesian(limits = c(0,1000))
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot')+
coord_cartesian(ylimit = c(0,1000))
coord_cartesian(ylim = c(0,1000))
```
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot')+
coord_cartesian(ylim = c(0,1000))
```
qplot(x=gender,y=friend_count, data=subset(pf,!is.na(gender)),geom='boxplot')+
coord_cartesian(ylim = c(0,250))
by(pf,pf$gender, summary)
by(pf$friend_count,pf$gender, summary)
by(pf$friend_count,pf$gender, average)
by(pf$friend_count,pf$gender, mean)
qplot(x=gender,y=friend_initiated, data=subset(pf,!is.na(gender)),geom='boxplot')
qplot(x=gender,y=friendships_initiated, data=subset(pf,!is.na(gender)),geom='boxplot')
coord_cartesian(ylim = c(0,500))
qplot(x=gender,y=friendships_initiated, data=subset(pf,!is.na(gender)),geom='boxplot')+
coord_cartesian(ylim = c(0,500))
qplot(x=gender,y=friendships_initiated, data=subset(pf,!is.na(gender)),geom='boxplot')+
coord_cartesian(ylim = c(0,200))
pf$mobile_check_in <- ifelse(pf$mobile_likes>0,TRUE, FALSE)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes>0,TRUE, FALSE)
mean(pf$mobile_check_in==TRUE)
View(pf)
View(pf)
pf$mobile_check_in <- ifelse(pf$mobile_likes>0,1, 0)
pf$mobile_check_in <- factor(mobile_check_in)
pf$mobile_check_in <- factor(mobile_check_in)
pf$mobile_check_in <- factor(pf$mobile_check_in)
mean(pf$mobile_check_in>0)
library(ggplot2)
data(diamonds)
diamdons <- data(diamonds)
library(ggplot2)
library(ggplot2)
data("diamonds")
library(ggplot2)
diamonds <- data("diamonds")
diamonds <- data("diamonds")
diamonds <- data(diamonds)
library(ggplot2)
diamonds <- data(diamonds)
data(diamonds)
